name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          stable: 'false'
          go-version: '1.17.1'
      - name: Lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.1

          golangci-lint run

  dockerfile-lint:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

  test:
    ## We want to define a strategy for our job
    strategy:
      ## this will contain a matrix of all of the combinations
      ## we wish to test again:
      matrix:
        go-version: [1.15.x, 1.16.x, 1.17.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]

    ## Defines the platform for each test run
    runs-on: ${{ matrix.platform }}

    ## the steps that will be run through for each version and platform
    ## combination
    steps:
    ## sets up go based on the version
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    ## checks out our code locally so we can work with the files
    - name: Checkout code
      uses: actions/checkout@v2

    ## runs go test ./...
    - name: Test
      run: go test -v ./...

  build:
    ## We want to define a strategy for our job
    strategy:
      ## this will contain a matrix of all of the combinations
      ## we wish to test again:
      matrix:
        go-version: [1.15.x, 1.16.x, 1.17.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]

    ## Defines the platform for each test run
    runs-on: ${{ matrix.platform }}

    needs: [test]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.17.1'

    - name: Build
      run: go build -v ./...

  # build and push docker image to docker registry
  build-and-push-image:
    runs-on: ubuntu-latest
    #needs: [build]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: kinoute/moviestills:latest
